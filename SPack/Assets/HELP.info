SPack - Utilitário de migração de bases de dados usando o algoritmo ScriptPack.

SINOPSE
    spack [ACAO] [OPÇÃO]

AÇÕES
    list ( OBJECT | CAMINHO )
        Lista o conteúdo do catálogo de scripts.
        OBJECT
            Tipo de objeto a ser listado.
            Pode ser um dos seguintes, no singular ou plural:
                product     Para listar produtos e suas versões.
                package     Para listar pacotes disponíveis.
                connection  Para listar as conexões pré-configuradas.
        CAMINHO
            Caminho de um objeto do catálogo de scripts.
            Mais detalhes na seção de parâmetros mais abaixo.
        Opções
            --catalog CATÁLOGO
            --password SENHA
            --select-package PACOTE
            --select-connection NOME
            --search CAMINHO
            --built-in
            --verbose
    show CAMINHO
        Exibe o conteúdo de objetos do catálogo de scripts.
        Opções
            --catalog CATÁLOGO
            --password SENHA
            --select-package PACOTE
            --select-connection NOME
            --search CAMINHO
            --built-in
    init
        Apenas inicializa as bases de dados com os objetos básicos do esquema
        scriptpack.
        Alguns dos objetos do esquema scriptpack inicializados na base são:
            scriptpack.INT_ARG
            scriptpack.STR_ARG
            scriptpack.DATE_ARG
        Opções
            --database STRING_DE_CONEXÃO
    migrate
        Executa os scripts de migração nas bases de dados.
        Opções
            --catalog CATÁLOGO
            --password SENHA
            --select-package PACOTE
            --select-connection NOME
            --search CAMINHO
            --built-in
            --arg ARG
            --database STRING_DE_CONEXÃO
    pipeline
        Exibe o plano de execução dos pipelines.
        Opções
            --catalog CATÁLOGO
            --password SENHA
            --select-package PACOTE
            --select-connection NOME
            --search CAMINHO
            --built-in
            --database STRING_DE_CONEXÃO
    validate
        Checa por falhas nos catálogos de scripts.
        Opções
            --catalog CATÁLOGO
            --password SENHA
            --select-package PACOTE
            --select-connection NOME
            --search CAMINHO
    pack ARQUIVO_DESTINO
        Empacota os scripts de migração em um arquivo.
        O pacote produzido é um arquivo compactado com o algoritmo ZIP e pode
        ser usado pelo spack para migrar uma base de dados.
        Opcionalmente o pacote pode ser protegido por uma senha interna
        reconhecida apenas pelo SPack ou por uma senha a escolha do usuário.
        ARQUIVO_DESTINO
            Nome do arquivo de pacote destino.
            A extensão sugerida para o nome do arquivo é:
                .scriptpack
            Essa será a extensão adicionada ao arquivo caso seja informado um
            nome de arquivo sem extensão.
            Outras sugesões comuns são:
                .spk
                .spack
        Opções
            --catalog CATÁLOGO
            --password SENHA
            --select-package PACOTE
            --select-connection NOME
            --search CAMINHO
            --built-in
            --password [ SENHA ]
    encode SENHA
        Codifica uma senha para ser usada em uma string de conexão.

OPÇÕES
    -n, --no-catalog
            Não carrega o catálogo de scripts.
            Esta opção é útil para ações que não necessitam de um catálogo de
            scripts.
            Em associação com o parâmetro `--built-in` permite a execução de
            procedimentos exclusivamente sobre o catálogo de scripts embutido.
    -c, --catalog CATÁLOGO
            Define o caminho da pasta ou arquivo do catálogo.
            Se omitido o SPack tentará localizar o catálogo a partir da pasta
            atual. É esperado que a pasta contenha apenas um catálogo.
    -e, --encoding ENCODING
            Define o encoding dos arquivos de script.
            O valor padrão é `ISO-8859-1`.
    -p, --select-package PACOTE
            Forma simplificada de selecionar pacotes de scripts para migração.
            Pode ocorrer várias vezes para selecionar vários pacotes.
            Caso sejam encontrados pacotes duplicados em diferentes catálogos
            uma falha será gerada.
            O PACOTE tem a forma:
                <PRODUTO>/<VERSÃO>[/<MÓDULO>[/<PACOTE>]]
            Onde:
               PRODUTO: Nome do produto.
               VERSÃO:  Versão do produto. Pode ser uma versão específica ou a
                        palavra-chave "latest", para selecionar a mais recente.
               MÓDULO:  Nome do módulo. Pode ser omitido, para selecionar todos
                        os módulos da versão do produto.
               PACOTE:  Nome do pacote. Pode ser omitido, para selecionar todos
                        os pacotes do módulo ou do produto.
            Exemplos:
                --select-package MyApp
                    Seleciona a versão mais recente de MyApp.
                    Equivalente a:
                        --select-package MyApp/latest
                --select-package MyApp/1.0.0
                    Seleciona a versão 1.0.0 de MyApp.
                --select-package MyApp/1.0.0/Contabilidade
                    Seleciona o módulo Contabilidade da versão 1.0.0 de MyApp.
                --select-package MyApp/latest/Suprimentos/Cadastros
                    Seleciona o pacote Cadastros do módulo Suprimentos da versão
                    mais recente de MyApp.
    -C, --select-connection NOME
            Seleciona a conexão destino da execução dos scripts.
            Pode ocorrer várias vezes para selecionar várias conexões.
            Usado na filtragem dos pacotes executados quando há conexões
            pré-configuradas no catálogo.
            NOME
                Nome da conexão pré-configurada no catálogo.
            Para determinar as conexões pré-configuradas no catálogo use a ação:
                spack list connection
    -s, --search CAMINHO
            Seleciona os scripts ou pacotes de scripts que serão executados na
            base de dados.
            Pode ocorrer várias vezes para selecionar vários scripts e pacotes.
            Se omitido o SPack executará todos os scripts do catálogo.
    -a, --arg ARG
            Define o valor de um argumento repassado para os scripts.
            O argumento pode ser capturado pelos scripts pelo uso das funções do
            esquema `scriptpack`.
            Por exemplo:
                spack migrate --arg "my_arg=123"
                Este argumento poderia ser capturado em um scrpt da seguinte
                forma:
                    SELECT scriptpack.INT_ARG('my_arg',NULL);
    -d, --database STRING_DE_CONEXÃO
            Configura a base de dados que será migrada.
            Pode ocorrer várias vezes para configurar as várias bases de dados
            disponíveis no catálogo.
    -b, --built-in
            Acrescenta os scripts embutidos no catálogo.
            Por padrão os scripts embutidos não são acrescentados.
            Os scripts embutidos contêm os objetos de automação de scripts do
            esquema `scriptpack`.
    -P, --password [ SENHA ]
            Define a senha para um arquivo de pacote de scripts.
            Senha de Usuário:
                A senha indicada no ato de geração do pacote deve ser indicado
                no ato da execução dos scripts.
                Para evitar que a senha seja exposta pode-se codificar a senha
                com o uso da ação `encode`.
                Exemplo:
                    spack encode MyPassword
                    # Produz a saída: enc:DgspEQccNB0LFA==
            Senha Interna:
                Quando o argumento --password e indicado sem valor o pacote
                recebe uma senha interna reconhecida apenas pela própria versão
                do SPack que criou o pacote ou versões posteriores.
                Neste caso não é necessário indicar o argumento --password no
                ato da execução dos scripts, porque o SPack é capaz de
                determinar se o pacote está ou não protegido por senha.
            Exemplos:
                spack pack MyPack --password
                spack pack MyPack --password MyPassword
                spack pack MyPack --password enc:DgspEQccNB0LFA==
    -i, --ignore-dependencies
            Ignora a dependência entre os scripts.
            Por padrão os scripts são executados em ordem de dependência.
            Quando dependências são ignoradas os scripts são executados em
            ordem alfabética de nome.
    -v, --verbose
            Mostra informações adicionais durante a execução.
    -h, --help
            Mostra esta ajuda.

Os nomes curtos dos parâmetros podem ser concatenados em grupos de parâmetros
curtos para reduzir a quantidade de caracteres digitados. Contanto que apenas o
último parâmetro especificado exija um valor o agrupamento de quaisquer nomes
curtos é válido.

Por exemplo, os comandos abaixo são equivalentes:
    spack migrate -vnbd Server=127.0.0.1;Database=MyDB;...
    spack migrate -v -n -b -d Server=127.0.0.1;Database=MyDB;...

PARÂMETROS
    CATÁLOGO
        O caminho de uma pasta ou arquivo de um catálogo de scripts.
        O catálogo de scripts é uma pasta contendo scripts organizados nos
        níveis Catálogos, Produtos, Versões, Módulos, Pacotes e Scripts.
        O SPack pode acessar a pasta diretamente ou através de um arquivo
        compactado ZIP.
        O valor de CATÁLOGO pode ser:
        -   O caminho de uma pasta contendo um catálogo de scripts.
        -   O caminho de um arquivo ZIP contendo um catálogo de scripts.
        -   O caminho de um arquivo JSON que esteja na raiz pasta raiz do
            catálogo de scripts.
            Em geral este arquivo tem o nome de `-catalog.jsonc`.
        Exemplos:
        -   No Windows:
            -   C:\Scripts
            -   C:\Scripts.zip
            -   C:\Scripts\-catalog.jsonc
        -   No Linux:
            -   /home/user/Scripts
            -   /home/user/Scripts.zip
            -   /home/user/Scripts/-catalog.jsonc
    PACOTE
        A identificação de um pacote na forma:
            <PRODUTO>/<VERSÃO>/<MÓDULO>/<PACOTE>
        Onde:
            <PRODUTO>
                É o nome do produto.
                Exemplo:
                    MyApp
            <VERSÃO>
                Opcional.
                É a versão do produto.
                Se omitido, a versão mais recente do produto será selecionada.
                O rótulo `latest` pode ser usado para selecionar a versão mais
                recente.
                Exemplo:
                    MyApp/1.0.0
                    MyApp/latest
            <MÓDULO>
                Opcional.
                É o nome do módulo.
                Se omitido serão selecionados todos os módulos ativos da versão
                do produto.
                Exemplo:
                    MyApp/1.0.0/Contabilidade
                    MyApp/1.0.0/Suprimentos
            <PACOTE>
                Opcional.
                É o nome do pacote.
                Se omitido serão selecionados todos os pacotes ativos do módulo
                da versão do produto.
                Exemplo:
                    MyApp/1.0.0/Contabilidade/Relatórios
                    MyApp/1.0.0/Contabilidade/Cadastros
    CAMINHO
        Um caminho ou padrão de pesquisa de pastas e arquivos no diretório
        virtual do catálogo de scripts. O padrão de pesquisa suporta as opções
        comuns do Glob Pattern, que é um tipo de padrão de string utilizado para
        fazer correspondências com nomes de arquivos e diretórios. Esses padrões
        facilitam a especificação de múltiplos arquivos ou diretórios usando
        caracteres curinga, simplificando a busca e manipulação de arquivos.
        Algumas opções comuns do Glob Pattern incluem:
            ?   Corresponde a qualquer caractere único
            *   Corresponde a qualquer sequência de caracteres (incluindo vazio)
            **  Corresponde a qualquer sequência de caracteres, atravessando
                subdiretórios
            []  Corresponde a um único caractere que esteja dentro dos colchetes
                Exemplo:
                    [abc] corresponderia a 'a', 'b' ou 'c'
            [!] Corresponde a um único caractere que não esteja dentro dos
                colchetes
                Exemplo:
                    [!abc] corresponderia a qualquer caractere quenão seja 'a',
                    'b' ou 'c'
        Exemplos:
            /Catálogo/SandboxApp/1.0.0/WebSite/Scripts/sc-001.sql
                Corresponde um script
            /Catálogo/SandboxApp/1.?.?
                Corresponde todas as versões 1.*
            **/*.sql
                Corresponde a itens com a extensão .sql
            **/*[!.sql]
                Corresponde a qualquer item exceto aqueles com a extensão .sql
    STRING_DE_CONEXÃO
        Configuração de uma string de conexão para um banco de dados.
        O SPack suporta a configuração de múltiplas bases de dados para
        migração de múltiplas bases de dados em uma única execução.
        Cada string de conexão definida para uma base de dados tem a forma:
            Name=<NOME_DA_CONEXÃO>;Provider=<PROVEDOR>;<STRING_DE_CONEXÃO>
        Onde:
            <NOME_DA_CONEXÃO>
                Nome da conexão.
                Se omitido, o nome da conexão será "Default".
                Se houver uma conexão com o mesmo nome definida no catálogo esta
                definição a sobrescreverá. Portanto, é recomendado omitir o
                parâmetro `Provider` caso a conexão esteja definida no catálogo.
            <PROVEDOR>
                Nome do provedor de banco de dados.
                Se omitido o provedor será lido da conexão definida no catálogo.
                Se não houver uma conexão definida no catálogo, o provedor será
                "SQLServer".
                Nomes suportados pelo ScriptPack:
                    SQLServer
                    PostgreSQL
            <STRING_DE_CONEXÃO>
                É a string de conexão para a base de dados.
                A string de conexão é composta por uma lista de pares de chave e
                valor separados por ponto-e-vírgula (;).
                Exemplo:
                    "Server=localhost;Database=MyDB;User Id=sa;Password=123"
        As conexões nomeadas podem ser pré-definidas no catálogo no arquivo de
        configuração do catálogo (-catalog.jsonc), na coleção de conexões da sua
        propriedade `connections`.
        Por exemplo:
            // -catalog.jsonc
            {
              "connections": [
                { "name": "mydb1", "provider": "SqlServer" },
                { "name": "mydb2", "provider": "PostgreSQL" }
              ]
            }
        Exemplos:
            Name=mydb1;Server=localhost;Database=MyDB1;User Id=sa;Password=123
            Name=mydb2;Provider=PostgreSQL;Server=localhost;Database=MyDB2;...
    
EXEMPLOS

    spack list **/*.sql
            Lista todos os scripts do catálogo.

    spack list **/*.connection
            Lista todas as conexões do catálogo.

    spack show **/sc-001.sql
            Exibe o conteúdo do script `sc-001.sql`.

    spack show **/mydb.connection
            Exibe a configuração de conexão para a base de dados `mydb`.

    spack migrate \
        -s **/sc-001.sql \
        -d mydb1:Server=localhost;Database=MyDB1;User Id=sa;Password=123
            Executa o script `sc-001.sql` na base de dados `mydb1`.

    spack encode MyPassword
        # Imprime: enc:DgspEQccNB0LFA==
            Codifica a senha `MyPassword` para ser usada em uma string de
            conexão.

    spack migrate \
        -c MyScriptPack.zip \
        -s **/sc-001.sql \
        -d mydb1:Server=localhost;Database=MyDB1;\
                User Id=sa;\Password=enc:DgspEQccNB0LFA==
            Executa o script `sc-001.sql` na base de dados `mydb1` a partir do
            catálogo `MyScriptPack.zip` usando a senha codificada.
